{"version":3,"sources":["webpack:///./src/app/pages/auth/register/register.module.ts","webpack:///./src/app/pages/auth/register/register.page.html","webpack:///./src/app/pages/auth/register/register.page.scss","webpack:///./src/app/pages/auth/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule { }\n","module.exports = \"<ion-content>\\n  <ion-grid fixed>\\n    <ion-row justify-content-center>\\n      <h1>Registar</h1>\\n    </ion-row>\\n    <form [formGroup]=\\\"registerForm\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <div *ngIf=\\\"erro\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n            {{erro_messagem}}\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><i class=\\\"fas fa-user\\\"></i> Username</ion-label>\\n            <ion-input formControlName=\\\"username\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.username\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('username').hasError(error.type) && (registerForm.get('username').dirty || registerForm.get('username').touched)\\\">\\n                {{error.message}}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><i class=\\\"fas fa-envelope\\\"></i> Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('email').hasError(error.type) && (registerForm.get('email').dirty || registerForm.get('email').touched)\\\">\\n                {{error.message}}\\n              </div>\\n            </ng-container>\\n          </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\"><i class=\\\"fas fa-lock\\\"></i> Password</ion-label>\\n            <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"error-messages\\\">\\n            <ng-container *ngFor=\\\"let error of error_messages.password\\\">\\n              <div class=\\\"error-message\\\"\\n                *ngIf=\\\"registerForm.get('password').hasError(error.type) && (registerForm.get('password').dirty || registerForm.get('password').touched)\\\">\\n                {{error.message}}\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row justify-content-center>\\n        <ion-button [disabled]=\\\"!registerForm.valid\\\" (click)=\\\"registar()\\\" color=\\\"vermelho\\\">\\n          Registar\\n        </ion-button>\\n      </ion-row>\\n    </form>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \".error-messages {\\n  font-size: 0.7em;\\n  color: red;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3JmbG9rYS9EZXNrdG9wL1Byb2plY3RzLzYtMDUvTXVzZXVBcHAvc3JjL2FwcC9wYWdlcy9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1Ysa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlcyB7XG4gICAgZm9udC1zaXplOiAwLjdlbTtcbiAgICBjb2xvcjogcmVkO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { PecasdataService } from 'src/app/api/pecasdata.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  registerForm: FormGroup;\n  erro: boolean = false;\n  erro_messagem = \"\";\n  response: any;\n  error_messages = {\n    'username': [\n      { type: 'required', message: 'Username é obrigatório' },\n      { type: 'minlength', message: 'Username tem que ter no mínimo 2 caracteres' },\n      { type: 'maxlength', message: 'Username tem que ter no máximo 30 caracteres' }\n    ],\n    'email': [\n      { type: 'required', message: 'Email é obrigatório' },\n      { type: 'minlength', message: 'Email tem que ter no mínimo 6 caracteres' },\n      { type: 'maxlength', message: 'Email tem que ter no máximo 60 caracteres' },\n      { type: 'pattern', message: 'Email tem que ter válido' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password é obrigatório' },\n      { type: 'minlength', message: 'Password tem que ter no mínimo 6 caracteres' },\n      { type: 'maxlength', message: 'Password tem que ter no máximo 30 caracteres' }\n    ],\n  };\n  constructor(public api: PecasdataService, public formBuilder: FormBuilder, public auth: AuthenticationService, public router: Router) {\n    this.registerForm = this.formBuilder.group({\n      username: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(30),\n      ])),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(60),\n        Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30),\n      ]))\n    });\n  }\n\n  ngOnInit() {\n  }\n  async registar() {\n    let user = [this.registerForm.value.username, this.registerForm.value.email, this.registerForm.value.password];\n    await this.api.register(user).then((data) => {\n      let user_login = [this.registerForm.value.username, this.registerForm.value.password];\n      console.log(\"urra\" + data);\n      this.router.navigate(['/entrar/login']);\n    }).catch((error) => {\n      console.log(error.statusText);\n      this.erro_messagem = error.statusText;\n      this.erro = true;\n\n    });\n  }\n\n}\n"],"sourceRoot":""}